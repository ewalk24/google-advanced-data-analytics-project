#importing libraries
Import pandas as pd
Import numpy as np

#reading csv file into dataset 
tik_tok_df=pd.read_csv(‘tiktok_dataset.csv”)

#examining dataset
tik_tok_df.head(10)
tik_tok_df.info()
tik_tok_df.describe()

#determining different values of claim_status column
tik_tok_df[‘claim_status’].value_counts()

#checking mean/median of view counts for claim in claim_status column
claims=tik_tok_df[‘claim_status’]==’claim’]
print(“The mean of views with claims is:',claims['video_view_count'].mean()
print('The median of views with claims is:',claims['video_view_count'].median()

#checking mean/median of view counts for opinion in claim_status column
opinion=tik_tok_df[tik_tok_df['claim_status']=='opinion']
print('The mean of views with opinions is:',opinion['video_view_count'].mean())
print('The mean of views with opinions is:',opinion['video_view_count'].median())

#groupby claim status and author ban
tik_tok_df.groupby(['claim_status','author_ban_status']).count()[['#']]

#median value of author ban status
active=tik_tok_df[tik_tok_df['author_ban_status']=='active']
banned=tik_tok_df[tik_tok_df['author_ban_status']=='banned']
under_review=tik_tok_df[tik_tok_df['author_ban_status']=='under review']
print('Median of active authors is:',active['video_share_count'].median())
print('Median of banned authors is:',banned['video_share_count'].median())
print('Median of under review authors is:',under_review['video_share_count'].median())

#grouping author ban status with agg() getting count/mean/median
tik_tok_df.groupby(['author_ban_status']).agg({'video_view_count':['count','mean','median'],
'video_like_count':['count','mean','median'],'video_share_count':['count','mean','median']})

#creating columns ‘likes_per_view”,”comments_per_view”,”shares_per_view”
tik_tok_df['likes_per_view']=tik_tok_df['video_like_count']/tik_tok_df['video_view_count']
tik_tok_df['comments_per_view']=tik_tok_df['video_comment_count']/tik_tok_df['video_view_count']
tik_tok_df['shares_per_view']=tik_tok_df['video_share_count']/tik_tok_df['video_view_count']
tik_tok_df.head(10)

#groupby 3 new columns finding mean/count/median. Using claim_status and author_ban_status
tik_tok_df.groupby(['claim_status','author_ban_status']).agg({'likes_per_view':['count','mean','median'],'comments_per_view':['count','mean','median'],
'shares_per_view':['count','mean','median']})



